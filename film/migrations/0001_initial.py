# Generated by Django 2.2.20 on 2021-04-08 14:29

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_a', models.CharField(max_length=200)),
                ('answer_b', models.CharField(max_length=200)),
                ('answer_c', models.CharField(max_length=200)),
                ('answer_d', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.PositiveSmallIntegerField(default=18)),
                ('gender', models.CharField(choices=[('男', '男'), ('女', '女'), ('保密', '保密')], default='男', max_length=4)),
                ('photo', models.ImageField(default='user/default.jpg', upload_to='user/%Y%m%d/')),
                ('phone_num', models.CharField(max_length=11, unique=True)),
                ('score', models.PositiveIntegerField(default=0)),
                ('money', models.PositiveIntegerField(default=0)),
                ('vip', models.PositiveSmallIntegerField(choices=[(0, ''), (1, 'VIP1'), (2, 'VIP2'), (3, 'VIP3')], default=0)),
                ('info', models.CharField(default='nothing', max_length=200)),
                ('nick_name', models.CharField(default='用户', max_length=32)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('film_name', models.CharField(max_length=32)),
                ('file_date', models.DateField(auto_now_add=True)),
                ('director', models.CharField(max_length=32)),
                ('actor', models.CharField(max_length=64)),
                ('country', models.CharField(max_length=16)),
                ('movie_cate', models.CharField(default='全部', max_length=100)),
                ('poster', models.ImageField(upload_to='film/%Y%m%d/')),
                ('film_info', models.CharField(max_length=500)),
                ('price', models.PositiveSmallIntegerField(default=0)),
                ('search_count', models.PositiveIntegerField(default=0)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('box_office', models.PositiveIntegerField(default=0)),
                ('node_count', models.PositiveIntegerField(default=0)),
                ('comment_count', models.PositiveIntegerField(default=0)),
                ('film_status', models.PositiveSmallIntegerField(choices=[('0', '未上映'), ('1', '正在上映'), ('2', '已下架')], default=0)),
                ('film_long', models.CharField(default='', max_length=20)),
                ('film_category', models.PositiveSmallIntegerField(default=0)),
                ('film_score', models.CharField(default='null', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('price', models.PositiveSmallIntegerField(default=0)),
                ('food_cate', models.SmallIntegerField(choices=[('0', 'No description'), ('1', 'Small food'), ('2', 'Drink'), ('3', 'Souvenir')], default=0)),
                ('count', models.PositiveSmallIntegerField(default=0)),
                ('image', models.ImageField(default='goods/timg.jpg', upload_to='goods/%Y%m%d/')),
                ('food_info', models.CharField(default='抱歉,暂无描述', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_count', models.PositiveIntegerField(default=0)),
                ('sold_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='', max_length=20)),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.Seat')),
            ],
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_name', models.CharField(default='', max_length=200)),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='film.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='Usermessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_time', models.DateField(auto_now_add=True)),
                ('message', models.CharField(max_length=200)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usermessage', to='film.Consumer')),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.Answer')),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='film.Consumer')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.TestQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction_Records',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_num', models.PositiveIntegerField()),
                ('trans_date', models.DateField(auto_now_add=True)),
                ('count', models.PositiveIntegerField(default=0)),
                ('trans_info', models.CharField(default='', max_length=200)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transaction', to='film.Consumer')),
            ],
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('price', models.PositiveIntegerField(default=0)),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.Seat')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_time', models.DateField(auto_now_add=True)),
                ('node_status', models.BooleanField()),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='film.Consumer')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='film.Film')),
            ],
        ),
        migrations.CreateModel(
            name='Film_message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200)),
                ('play_time', models.DateField(auto_now_add=True)),
                ('play_count', models.PositiveSmallIntegerField(default=1)),
                ('play_money', models.PositiveIntegerField(default=0)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='film_messages', to='film.Consumer')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='film_messages', to='film.Film')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_info', models.CharField(max_length=200)),
                ('comment_time', models.DateField(auto_now_add=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='film.Consumer')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='film.Film')),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_num', models.PositiveIntegerField()),
                ('comment', models.CharField(default='积分账单', max_length=200)),
                ('cost_date', models.DateField(auto_now_add=True)),
                ('money', models.PositiveIntegerField(default=0)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bills', to='film.Consumer')),
            ],
        ),
        migrations.CreateModel(
            name='Adminlogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_count', models.PositiveIntegerField(default=0)),
                ('login_time', models.DateField(auto_now_add=True)),
                ('login_ip', models.GenericIPAddressField()),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='admin_login', to='film.Consumer')),
            ],
        ),
    ]
